paths:
# GET
  /api/drProfile:
    get:
      tags:
        - DRPROFILE
      summary: /api/drProfile
      description: Display all Dr's profile already registered.
      consumes:
        - "application/json"
      produces:
        - "application/json"
      requestBody:
        description: Optional description in Markdown
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/drProfileModelRes'
        204:
          description: OK -> No content in DB.
          content:
            application/json:
              schema:
                $ref: '#/definitions/204DefResSuccess'
        500:
          description: ERROR -> check error stack display for more information.
          content:
            application/json:
              schema:
                $ref: '#/definitions/500DefResError'

  /api/drProfile/drProfileId:
    get:
      tags:
        - DRPROFILE
      summary: /api/drProfile/drProfileId
      description: By ID, display an dr's profile.
      requestBody:
        description: Need ID.
        type: object
        content:
          application/json:
            schema:
              $ref: '#/definitions/idDefRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/drProfileModelRes'
        204:
          description: OK -> No content in DB.
          content:
            application/json:
              schema:
                $ref: '#/definitions/204DefResSuccess'
        500:
          description: ERROR -> check error stack display for more information.
          content:
            application/json:
              schema:
                $ref: '#/definitions/500DefResError'
# POST
    post:
      tags:
        - DRPROFILE
      summary: /api/drProfile/drProfileId
      description: -- FOR MOBILE -- By ID, Display one Dr's profile registered in DB.
      requestBody:
        description: Need ID.
        type: object
        content:
          application/json:
            schema:
              $ref: '#/definitions/idDefRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/drProfileModelRes'
        # 204:
        #   description: OK -> No content in DB.
        #   content:
        #     application/json:
        #       schema:
        #         $ref: '#/definitions/204DefResSuccess'
        500:
          description: ERROR -> check error stack display for more information.
          content:
            application/json:
              schema:
                $ref: '#/definitions/500DefResError'

  /api/drProfile/create:
    post:
      tags:
        - DRPROFILE
      summary: api/drProfile/create
      description: Add Dr profile in DB. Returns a JSON added.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/definitions/drProfileModelReqPOST'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/drProfileModelRes'
        500:
          description: ERROR -> check error stack display for more information.
          content:
            application/json:
              schema:
                $ref: '#/definitions/500DefResError'

# DELETE
  /api/drProfile/delete:
    delete:
      tags:
        - DRPROFILE
      summary: /api/drProfile/delete
      description:  Delete by ID Dr profile in DB. After send a ID JSON, Delete the user and Returns a JSON deleted.
      requestBody:
        description: Need ID. Other keys are not mandatory.
        type: object
        content:
          application/json:
            schema:
              $ref: '#/definitions/idDefRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/drProfileModelRes'
        500:
          description: ERROR -> check error stack display for more information.
          content:
            application/json:
              schema:
                $ref: '#/definitions/500DefResError'

# UPDATE
  /api/drProfile/update:
    put:
      tags:
        - DRPROFILE
      summary: /api/drProfile/update
      description: Update by ID  Dr profile's data in DB. After send a JSON with new data, update the user's data and Returns a JSON updated. IN JSON ID IS MANDATORY
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/definitions/drProfileModelReqPUT'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/drProfileModelRes'
        500:
          description: ERROR -> check error stack display for more information.
          content:
            application/json:
              schema:
                $ref: '#/definitions/500DefResError'
